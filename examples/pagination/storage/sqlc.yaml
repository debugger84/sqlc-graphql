version: '2'
plugins:
  - name: graphql
#    process:
#        cmd: "../../bin/sqlc-graphql"
    wasm:
      url: https://github.com/debugger84/sqlc-graphql/releases/download/v0.2.0/sqlc-graphql.wasm
      sha256: b7bb17d20b246627fbdf34e4997e1a191b3280d02f57d6b403c205dbf23e114c

  - name: golang
#    process:
#      cmd: "../../../sqlc-gen-go/bin/sqlc-gen-go"
    wasm:
      url: https://github.com/debugger84/sqlc-gen-go/releases/download/v1.3.2/sqlc-gen-go.wasm
      sha256: 2fc0ab0cba9682f9c4e531e7b51b2ee0e844d6ed1569f6bd380233ba8b3eaa0d
sql:
  - engine: "postgresql"
    schema:
     - "migrations"
    queries: "query.sql"

    codegen:
      - plugin: graphql
        out: "../graphql"
        options:
          ## the full package name pointing to the code generated by golang plugin
          package: "pagination/storage"
          ## generate GraphQL enums
          emit_all_enum_values: true
          ## create several default types and directives to work in conjunction with the gqlgen library https://gqlgen.com/
          gen_common_parts: true
          ## exclude columns from the generated schema
          ## Author - is the generated Graphql object
          ## and CreatedAt is the column name to be excluded
          exclude:
            - "Author.CreatedAt"
      ## options for the default golang generation plugin https://github.com/sqlc-dev/sqlc-gen-go
      - plugin: golang
        out: "./"
        options:
          package: "storage"
          sql_package: "pgx/v5"
          emit_json_tags: true
          emit_all_enum_values: true
          json_tags_case_style: "camel"
          out: "./"
