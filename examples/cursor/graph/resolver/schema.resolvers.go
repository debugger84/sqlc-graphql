package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"cursor/graph/gen"
	"cursor/graph/model"
	"cursor/storage"
)

// Bio is the resolver for the bio field.
func (r *authorResolver) Bio(ctx context.Context, obj *storage.Author) (*string, error) {
	if obj.Bio.Valid {
		return &obj.Bio.String, nil
	}
	return nil, nil
}

// PageInfo is the resolver for the pageInfo field.
func (r *authorConnectionResolver) PageInfo(ctx context.Context, obj *storage.AuthorConnection) (
	model.PageInfo,
	error,
) {
	return model.PageInfo{
		HasNextPage:     obj.PageInfo.HasNextPage,
		HasPreviousPage: obj.PageInfo.HasPreviousPage,
		StartCursor:     obj.PageInfo.StartCursor,
		EndCursor:       obj.PageInfo.EndCursor,
	}, nil
}

// Author returns gen.AuthorResolver implementation.
func (r *Resolver) Author() gen.AuthorResolver { return &authorResolver{r} }

// AuthorConnection returns gen.AuthorConnectionResolver implementation.
func (r *Resolver) AuthorConnection() gen.AuthorConnectionResolver {
	return &authorConnectionResolver{r}
}

type authorResolver struct{ *Resolver }
type authorConnectionResolver struct{ *Resolver }
