package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"cursor/graph/gen"
	"cursor/storage"

	"github.com/jackc/pgx/v5/pgtype"
)

// CreateAuthor is the resolver for the CreateAuthor field.
func (r *mutationResolver) CreateAuthor(ctx context.Context, request storage.CreateAuthorParams) (storage.Author, error) {
	return r.Queries.CreateAuthor(ctx, request)
}

// ListAuthors is the resolver for the ListAuthors field.
func (r *queryResolver) ListAuthors(ctx context.Context, request storage.ListAuthorsParams) (storage.AuthorConnection, error) {
	return r.Queries.ListAuthors(ctx, request)
}

// Bio is the resolver for the bio field.
func (r *createAuthorInputResolver) Bio(ctx context.Context, obj *storage.CreateAuthorParams, data *string) error {
	if data != nil {
		obj.Bio = pgtype.Text{
			String: *data,
			Valid:  true,
		}
	}
	return nil
}

// CreateAuthorInput returns gen.CreateAuthorInputResolver implementation.
func (r *Resolver) CreateAuthorInput() gen.CreateAuthorInputResolver {
	return &createAuthorInputResolver{r}
}

type createAuthorInputResolver struct{ *Resolver }
