version: '2'
plugins:
  - name: dataloader
    process:
      cmd: "../../../sqlc-dataloader/bin/sqlc-dataloader"

  - name: graphql
    wasm:
      url: https://github.com/debugger84/sqlc-graphql/releases/download/v0.2.2/sqlc-graphql.wasm
      sha256: 4791910ca23fc14ea82325dd5942f57891e2c329d7918645afeea02c4c05418a

  - name: golang
    wasm:
      url: https://downloads.sqlc.dev/plugin/sqlc-gen-go_1.3.0.wasm
      sha256: e8206081686f95b461daf91a307e108a761526c6768d6f3eca9781b0726b7ec8
sql:
  - engine: "postgresql"
    schema:
     - "migrations"
    queries: "query.sql"

    codegen:
      - plugin: graphql
        out: "../graphql"
        options:
          ## the full package name pointing to the code generated by golang plugin
          package: "dataloader/storage"
          ## generate GraphQL enums
          emit_all_enum_values: true
          ## create several default types and directives to work in conjunction with the gqlgen library https://gqlgen.com/
          gen_common_parts: true
          ## exclude columns from the generated schema
          ## Author - is the generated Graphql object
          ## and CreatedAt is the column name to be excluded
          exclude:
            - "Author.CreatedAt"
      ## options for the default golang generation plugin https://github.com/sqlc-dev/sqlc-gen-go
      - plugin: golang
        out: "./"
        options:
          package: "storage"
          sql_package: "pgx/v5"
          emit_json_tags: true
          emit_all_enum_values: true
          json_tags_case_style: "camel"
          out: "./"

      - plugin: dataloader
        out: "./"
        options:
          ## the package name for the dataloader code
          package: "dataloader"
          sql_package: "pgx/v5"
          ## the full package name pointing to the code generated by golang plugin
          model_import: "dataloader/storage"